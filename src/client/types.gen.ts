// This file is auto-generated by @hey-api/openapi-ts

export type ChangePassword = {
  old_password: string
  new_password: string
}

export type UserSerializersReadable = {
  readonly id?: number
  password: string
  /**
   * Obrigatório. 150 caracteres ou menos. Letras, números e @/./+/-/_ apenas.
   */
  username: string
  first_name?: string
  last_name?: string
  email?: string
}

export type UserSerializersWritable = {
  password: string
  /**
   * Obrigatório. 150 caracteres ou menos. Letras, números e @/./+/-/_ apenas.
   */
  username: string
  first_name?: string
  last_name?: string
  email?: string
}

export type MemberFunctionsSerializersReadable = {
  readonly id?: number
  function_name: string
}

export type MemberFunctionsSerializersWritable = {
  function_name: string
}

export type MemberMeReadable = {
  readonly id?: number
  user?: UserSerializersReadable
  readonly function?: Array<MemberFunctionsSerializersReadable>
  readonly profile_picture?: string
  readonly created_at?: Date
  readonly updated_at?: Date
  name: string
  availability?: boolean
  cell_phone?: string
}

export type MemberMeWritable = {
  user?: UserSerializersWritable
  name: string
  availability?: boolean
  cell_phone?: string
}

export type MemberReadable = {
  readonly id?: number
  readonly created_at?: Date
  readonly updated_at?: Date
  name: string
  availability?: boolean
  cell_phone?: string
  readonly profile_picture?: string | null
  user: number
  function: Array<number>
}

export type MemberWritable = {
  name: string
  availability?: boolean
  cell_phone?: string
  user: number
  function: Array<number>
}

export type MusicCategorySerializersReadable = {
  readonly id?: number
  category_name: string
}

export type MusicCategorySerializersWritable = {
  category_name: string
}

export type MusicChordSerializersReadable = {
  readonly id?: number
  chord_name: string
  readonly chord_image?: string | null
}

export type MusicChordSerializersWritable = {
  chord_name: string
}

export type MusicSerializersReadable = {
  readonly id?: number
  category: Array<MusicCategorySerializersReadable>
  music_chord: Array<MusicChordSerializersReadable>
  readonly created_at?: Date
  readonly updated_at?: Date
  music_title: string
  author: string
  music_tone: string
  music_text: string
  music_link?: string
}

export type MusicSerializersWritable = {
  category: Array<MusicCategorySerializersWritable>
  music_chord: Array<MusicChordSerializersWritable>
  music_title: string
  author: string
  music_tone: string
  music_text: string
  music_link?: string
}

export type PasswordReset = {
  token: string
  new_password: string
}

export type PlaylistSerializersReadable = {
  readonly id?: number
  readonly created_at?: Date
  readonly updated_at?: Date
  playlist_name: string
  playlist_date?: Date
  music?: Array<number>
}

export type PlaylistSerializersWritable = {
  playlist_name: string
  playlist_date?: Date
  music?: Array<number>
}

export type PraiseLineupSerializersReadable = {
  readonly id?: number
  readonly created_at?: Date
  readonly updated_at?: Date
  lineup_date?: Date
  lineup_event?: string
  playlist?: number | null
}

export type PraiseLineupSerializersWritable = {
  lineup_date?: Date
  lineup_event?: string
  playlist?: number | null
}

export type RegisterUser = {
  first_name: string
  last_name: string
  username: string
  password: string
  email: string
  cell_phone: string
  token: string
}

export type RequestPasswordReset = {
  username: string
}

export type GenerateTemporaryToken = {
  email: string
}

export type TokenObtainPair = {
  username: string
  password: string
}

export type TokenRefreshReadable = {
  refresh: string
  readonly access?: string
}

export type TokenRefreshWritable = {
  refresh: string
}

export type MusicSerializers = MusicSerializersWritable

export type PraiseMemberCreate = {
  name: string
  availability?: boolean
  cell_phone?: string
  profile_picture?: Blob | File
  user: number
  function: Array<number>
}

export type MemberFunctionsSerializers = MemberFunctionsSerializersWritable

export type MusicCategorySerializers = MusicCategorySerializersWritable

export type MusicChordSerializers = MusicChordSerializersWritable

export type PlaylistSerializers = PlaylistSerializersWritable

export type PraiseLineupSerializers = PraiseLineupSerializersWritable

export type UserSerializers = UserSerializersWritable

export type PraiseChangePasswordCreateData = {
  body: ChangePassword
  path?: never
  query?: never
  url: '/praise/change-password/'
}

export type PraiseChangePasswordCreateErrors = {
  /**
   * detail
   */
  400: unknown
}

export type PraiseChangePasswordCreateResponses = {
  /**
   * Sem conteúdo.
   */
  204: void
}

export type PraiseChangePasswordCreateResponse =
  PraiseChangePasswordCreateResponses[keyof PraiseChangePasswordCreateResponses]

export type PraiseLoginCreateData = {
  body?: never
  path?: never
  query?: never
  url: '/praise/login/'
}

export type PraiseLoginCreateResponses = {
  201: unknown
}

export type PraiseLogoutCreateData = {
  body?: never
  path?: never
  query?: never
  url: '/praise/logout/'
}

export type PraiseLogoutCreateResponses = {
  201: unknown
}

export type PraiseMeListData = {
  body?: never
  path?: never
  query?: never
  url: '/praise/me/'
}

export type PraiseMeListErrors = {
  /**
   * Usuário não é um membro.
   */
  404: unknown
}

export type PraiseMeListResponses = {
  200: MemberMeReadable
}

export type PraiseMeListResponse =
  PraiseMeListResponses[keyof PraiseMeListResponses]

export type PraiseMemberFunctionsListData = {
  body?: never
  path?: never
  query?: {
    /**
     * A page number within the paginated result set.
     */
    page?: number
  }
  url: '/praise/member-functions/'
}

export type PraiseMemberFunctionsListResponses = {
  200: {
    count: number
    next?: string | null
    previous?: string | null
    results: Array<MemberFunctionsSerializersReadable>
  }
}

export type PraiseMemberFunctionsListResponse =
  PraiseMemberFunctionsListResponses[keyof PraiseMemberFunctionsListResponses]

export type PraiseMemberFunctionsCreateData = {
  body: MemberFunctionsSerializers
  path?: never
  query?: never
  url: '/praise/member-functions/'
}

export type PraiseMemberFunctionsCreateResponses = {
  201: MemberFunctionsSerializersReadable
}

export type PraiseMemberFunctionsCreateResponse =
  PraiseMemberFunctionsCreateResponses[keyof PraiseMemberFunctionsCreateResponses]

export type PraiseMemberFunctionsDeleteData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this member functions.
     */
    id: number
  }
  query?: never
  url: '/praise/member-functions/{id}/'
}

export type PraiseMemberFunctionsDeleteResponses = {
  204: void
}

export type PraiseMemberFunctionsDeleteResponse =
  PraiseMemberFunctionsDeleteResponses[keyof PraiseMemberFunctionsDeleteResponses]

export type PraiseMemberFunctionsReadData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this member functions.
     */
    id: number
  }
  query?: never
  url: '/praise/member-functions/{id}/'
}

export type PraiseMemberFunctionsReadResponses = {
  200: MemberFunctionsSerializersReadable
}

export type PraiseMemberFunctionsReadResponse =
  PraiseMemberFunctionsReadResponses[keyof PraiseMemberFunctionsReadResponses]

export type PraiseMemberFunctionsPartialUpdateData = {
  body: MemberFunctionsSerializers
  path: {
    /**
     * A unique integer value identifying this member functions.
     */
    id: number
  }
  query?: never
  url: '/praise/member-functions/{id}/'
}

export type PraiseMemberFunctionsPartialUpdateResponses = {
  200: MemberFunctionsSerializersReadable
}

export type PraiseMemberFunctionsPartialUpdateResponse =
  PraiseMemberFunctionsPartialUpdateResponses[keyof PraiseMemberFunctionsPartialUpdateResponses]

export type PraiseMemberFunctionsUpdateData = {
  body: MemberFunctionsSerializers
  path: {
    /**
     * A unique integer value identifying this member functions.
     */
    id: number
  }
  query?: never
  url: '/praise/member-functions/{id}/'
}

export type PraiseMemberFunctionsUpdateResponses = {
  200: MemberFunctionsSerializersReadable
}

export type PraiseMemberFunctionsUpdateResponse =
  PraiseMemberFunctionsUpdateResponses[keyof PraiseMemberFunctionsUpdateResponses]

export type PraiseMemberListData = {
  body?: never
  path?: never
  query?: {
    /**
     * Which field to use when ordering the results.
     */
    ordering?: string
    /**
     * A search term.
     */
    search?: string
    /**
     * A page number within the paginated result set.
     */
    page?: number
  }
  url: '/praise/member/'
}

export type PraiseMemberListResponses = {
  200: {
    count: number
    next?: string | null
    previous?: string | null
    results: Array<MemberReadable>
  }
}

export type PraiseMemberListResponse =
  PraiseMemberListResponses[keyof PraiseMemberListResponses]

export type PraiseMemberCreateData = {
  body: PraiseMemberCreate
  path?: never
  query?: never
  url: '/praise/member/'
}

export type PraiseMemberCreateResponses = {
  201: MemberReadable
}

export type PraiseMemberCreateResponse =
  PraiseMemberCreateResponses[keyof PraiseMemberCreateResponses]

export type PraiseMemberDeleteData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this member.
     */
    id: number
  }
  query?: never
  url: '/praise/member/{id}/'
}

export type PraiseMemberDeleteResponses = {
  204: void
}

export type PraiseMemberDeleteResponse =
  PraiseMemberDeleteResponses[keyof PraiseMemberDeleteResponses]

export type PraiseMemberReadData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this member.
     */
    id: number
  }
  query?: never
  url: '/praise/member/{id}/'
}

export type PraiseMemberReadResponses = {
  200: MemberReadable
}

export type PraiseMemberReadResponse =
  PraiseMemberReadResponses[keyof PraiseMemberReadResponses]

export type PraiseMemberPartialUpdateData = {
  body: PraiseMemberCreate
  path: {
    /**
     * A unique integer value identifying this member.
     */
    id: number
  }
  query?: never
  url: '/praise/member/{id}/'
}

export type PraiseMemberPartialUpdateResponses = {
  200: MemberReadable
}

export type PraiseMemberPartialUpdateResponse =
  PraiseMemberPartialUpdateResponses[keyof PraiseMemberPartialUpdateResponses]

export type PraiseMemberUpdateData = {
  body: PraiseMemberCreate
  path: {
    /**
     * A unique integer value identifying this member.
     */
    id: number
  }
  query?: never
  url: '/praise/member/{id}/'
}

export type PraiseMemberUpdateResponses = {
  200: MemberReadable
}

export type PraiseMemberUpdateResponse =
  PraiseMemberUpdateResponses[keyof PraiseMemberUpdateResponses]

export type PraiseMusicCategoryListData = {
  body?: never
  path?: never
  query?: {
    /**
     * Which field to use when ordering the results.
     */
    ordering?: string
    /**
     * A search term.
     */
    search?: string
  }
  url: '/praise/music-category/'
}

export type PraiseMusicCategoryListResponses = {
  200: Array<MusicCategorySerializersReadable>
}

export type PraiseMusicCategoryListResponse =
  PraiseMusicCategoryListResponses[keyof PraiseMusicCategoryListResponses]

export type PraiseMusicCategoryCreateData = {
  body: MusicCategorySerializers
  path?: never
  query?: never
  url: '/praise/music-category/'
}

export type PraiseMusicCategoryCreateResponses = {
  201: MusicCategorySerializersReadable
}

export type PraiseMusicCategoryCreateResponse =
  PraiseMusicCategoryCreateResponses[keyof PraiseMusicCategoryCreateResponses]

export type PraiseMusicCategoryDeleteData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this music category.
     */
    id: number
  }
  query?: never
  url: '/praise/music-category/{id}/'
}

export type PraiseMusicCategoryDeleteResponses = {
  204: void
}

export type PraiseMusicCategoryDeleteResponse =
  PraiseMusicCategoryDeleteResponses[keyof PraiseMusicCategoryDeleteResponses]

export type PraiseMusicCategoryReadData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this music category.
     */
    id: number
  }
  query?: never
  url: '/praise/music-category/{id}/'
}

export type PraiseMusicCategoryReadResponses = {
  200: MusicCategorySerializersReadable
}

export type PraiseMusicCategoryReadResponse =
  PraiseMusicCategoryReadResponses[keyof PraiseMusicCategoryReadResponses]

export type PraiseMusicCategoryPartialUpdateData = {
  body: MusicCategorySerializers
  path: {
    /**
     * A unique integer value identifying this music category.
     */
    id: number
  }
  query?: never
  url: '/praise/music-category/{id}/'
}

export type PraiseMusicCategoryPartialUpdateResponses = {
  200: MusicCategorySerializersReadable
}

export type PraiseMusicCategoryPartialUpdateResponse =
  PraiseMusicCategoryPartialUpdateResponses[keyof PraiseMusicCategoryPartialUpdateResponses]

export type PraiseMusicCategoryUpdateData = {
  body: MusicCategorySerializers
  path: {
    /**
     * A unique integer value identifying this music category.
     */
    id: number
  }
  query?: never
  url: '/praise/music-category/{id}/'
}

export type PraiseMusicCategoryUpdateResponses = {
  200: MusicCategorySerializersReadable
}

export type PraiseMusicCategoryUpdateResponse =
  PraiseMusicCategoryUpdateResponses[keyof PraiseMusicCategoryUpdateResponses]

export type PraiseMusicChordListData = {
  body?: never
  path?: never
  query?: {
    /**
     * chord_name
     */
    chord_name?: string
    /**
     * Which field to use when ordering the results.
     */
    ordering?: string
    /**
     * A search term.
     */
    search?: string
    /**
     * A page number within the paginated result set.
     */
    page?: number
  }
  url: '/praise/music-chord/'
}

export type PraiseMusicChordListResponses = {
  200: {
    count: number
    next?: string | null
    previous?: string | null
    results: Array<MusicChordSerializersReadable>
  }
}

export type PraiseMusicChordListResponse =
  PraiseMusicChordListResponses[keyof PraiseMusicChordListResponses]

export type PraiseMusicChordCreateData = {
  body: MusicChordSerializers
  path?: never
  query?: never
  url: '/praise/music-chord/'
}

export type PraiseMusicChordCreateResponses = {
  201: MusicChordSerializersReadable
}

export type PraiseMusicChordCreateResponse =
  PraiseMusicChordCreateResponses[keyof PraiseMusicChordCreateResponses]

export type PraiseMusicChordDeleteData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this music chord.
     */
    id: number
  }
  query?: never
  url: '/praise/music-chord/{id}/'
}

export type PraiseMusicChordDeleteResponses = {
  204: void
}

export type PraiseMusicChordDeleteResponse =
  PraiseMusicChordDeleteResponses[keyof PraiseMusicChordDeleteResponses]

export type PraiseMusicChordReadData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this music chord.
     */
    id: number
  }
  query?: never
  url: '/praise/music-chord/{id}/'
}

export type PraiseMusicChordReadResponses = {
  200: MusicChordSerializersReadable
}

export type PraiseMusicChordReadResponse =
  PraiseMusicChordReadResponses[keyof PraiseMusicChordReadResponses]

export type PraiseMusicChordPartialUpdateData = {
  body: MusicChordSerializers
  path: {
    /**
     * A unique integer value identifying this music chord.
     */
    id: number
  }
  query?: never
  url: '/praise/music-chord/{id}/'
}

export type PraiseMusicChordPartialUpdateResponses = {
  200: MusicChordSerializersReadable
}

export type PraiseMusicChordPartialUpdateResponse =
  PraiseMusicChordPartialUpdateResponses[keyof PraiseMusicChordPartialUpdateResponses]

export type PraiseMusicChordUpdateData = {
  body: MusicChordSerializers
  path: {
    /**
     * A unique integer value identifying this music chord.
     */
    id: number
  }
  query?: never
  url: '/praise/music-chord/{id}/'
}

export type PraiseMusicChordUpdateResponses = {
  200: MusicChordSerializersReadable
}

export type PraiseMusicChordUpdateResponse =
  PraiseMusicChordUpdateResponses[keyof PraiseMusicChordUpdateResponses]

export type PraiseMusicListData = {
  body?: never
  path?: never
  query?: {
    /**
     * Which field to use when ordering the results.
     */
    ordering?: string
    /**
     * A search term.
     */
    search?: string
    /**
     * A page number within the paginated result set.
     */
    page?: number
  }
  url: '/praise/music/'
}

export type PraiseMusicListResponses = {
  200: {
    count: number
    next?: string | null
    previous?: string | null
    results: Array<MusicSerializersReadable>
  }
}

export type PraiseMusicListResponse =
  PraiseMusicListResponses[keyof PraiseMusicListResponses]

export type PraiseMusicCreateData = {
  body: MusicSerializers
  path?: never
  query?: never
  url: '/praise/music/'
}

export type PraiseMusicCreateResponses = {
  201: MusicSerializersReadable
}

export type PraiseMusicCreateResponse =
  PraiseMusicCreateResponses[keyof PraiseMusicCreateResponses]

export type PraiseMusicMostPlayedListData = {
  body?: never
  path?: never
  query?: never
  url: '/praise/music/most-played'
}

export type PraiseMusicMostPlayedListResponses = {
  200: unknown
}

export type PraiseMusicMusicsData = {
  body?: never
  path?: never
  query?: {
    /**
     * Which field to use when ordering the results.
     */
    ordering?: string
    /**
     * A search term.
     */
    search?: string
    /**
     * A page number within the paginated result set.
     */
    page?: number
  }
  url: '/praise/music/musics/'
}

export type PraiseMusicMusicsResponses = {
  200: {
    counts?: number
    musics?: Array<{
      id?: number
      category?: Array<{
        id?: number
        category_name?: string
      }>
      music_chord?: Array<{
        id?: number
        chord_name?: string
        chord_image?: string | null
      }>
      created_at?: Date
      updated_at?: Date
      music_title?: string
      author?: string
      music_tone?: string
      music_text?: string
      music_link?: string
    }>
  }
}

export type PraiseMusicMusicsResponse =
  PraiseMusicMusicsResponses[keyof PraiseMusicMusicsResponses]

export type PraiseMusicDeleteData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this music.
     */
    id: number
  }
  query?: never
  url: '/praise/music/{id}/'
}

export type PraiseMusicDeleteResponses = {
  204: void
}

export type PraiseMusicDeleteResponse =
  PraiseMusicDeleteResponses[keyof PraiseMusicDeleteResponses]

export type PraiseMusicReadData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this music.
     */
    id: number
  }
  query?: never
  url: '/praise/music/{id}/'
}

export type PraiseMusicReadResponses = {
  200: MusicSerializersReadable
}

export type PraiseMusicReadResponse =
  PraiseMusicReadResponses[keyof PraiseMusicReadResponses]

export type PraiseMusicPartialUpdateData = {
  body: MusicSerializers
  path: {
    /**
     * A unique integer value identifying this music.
     */
    id: number
  }
  query?: never
  url: '/praise/music/{id}/'
}

export type PraiseMusicPartialUpdateResponses = {
  200: MusicSerializersReadable
}

export type PraiseMusicPartialUpdateResponse =
  PraiseMusicPartialUpdateResponses[keyof PraiseMusicPartialUpdateResponses]

export type PraiseMusicUpdateData = {
  body: MusicSerializers
  path: {
    /**
     * A unique integer value identifying this music.
     */
    id: number
  }
  query?: never
  url: '/praise/music/{id}/'
}

export type PraiseMusicUpdateResponses = {
  200: MusicSerializersReadable
}

export type PraiseMusicUpdateResponse =
  PraiseMusicUpdateResponses[keyof PraiseMusicUpdateResponses]

export type PraisePasswordResetCreateData = {
  body: PasswordReset
  path?: never
  query?: never
  url: '/praise/password-reset/'
}

export type PraisePasswordResetCreateErrors = {
  /**
   * detail
   */
  400: unknown
}

export type PraisePasswordResetCreateResponses = {
  /**
   * Sem conteudo
   */
  204: void
}

export type PraisePasswordResetCreateResponse =
  PraisePasswordResetCreateResponses[keyof PraisePasswordResetCreateResponses]

export type PraisePlaylistListData = {
  body?: never
  path?: never
  query?: {
    /**
     * Which field to use when ordering the results.
     */
    ordering?: string
    /**
     * A search term.
     */
    search?: string
    /**
     * A page number within the paginated result set.
     */
    page?: number
  }
  url: '/praise/playlist/'
}

export type PraisePlaylistListResponses = {
  200: {
    count: number
    next?: string | null
    previous?: string | null
    results: Array<PlaylistSerializersReadable>
  }
}

export type PraisePlaylistListResponse =
  PraisePlaylistListResponses[keyof PraisePlaylistListResponses]

export type PraisePlaylistCreateData = {
  body: PlaylistSerializers
  path?: never
  query?: never
  url: '/praise/playlist/'
}

export type PraisePlaylistCreateResponses = {
  201: PlaylistSerializersReadable
}

export type PraisePlaylistCreateResponse =
  PraisePlaylistCreateResponses[keyof PraisePlaylistCreateResponses]

export type PraisePlaylistDeleteData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this playlist.
     */
    id: number
  }
  query?: never
  url: '/praise/playlist/{id}/'
}

export type PraisePlaylistDeleteResponses = {
  204: void
}

export type PraisePlaylistDeleteResponse =
  PraisePlaylistDeleteResponses[keyof PraisePlaylistDeleteResponses]

export type PraisePlaylistReadData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this playlist.
     */
    id: number
  }
  query?: never
  url: '/praise/playlist/{id}/'
}

export type PraisePlaylistReadResponses = {
  200: PlaylistSerializersReadable
}

export type PraisePlaylistReadResponse =
  PraisePlaylistReadResponses[keyof PraisePlaylistReadResponses]

export type PraisePlaylistPartialUpdateData = {
  body: PlaylistSerializers
  path: {
    /**
     * A unique integer value identifying this playlist.
     */
    id: number
  }
  query?: never
  url: '/praise/playlist/{id}/'
}

export type PraisePlaylistPartialUpdateResponses = {
  200: PlaylistSerializersReadable
}

export type PraisePlaylistPartialUpdateResponse =
  PraisePlaylistPartialUpdateResponses[keyof PraisePlaylistPartialUpdateResponses]

export type PraisePlaylistUpdateData = {
  body: PlaylistSerializers
  path: {
    /**
     * A unique integer value identifying this playlist.
     */
    id: number
  }
  query?: never
  url: '/praise/playlist/{id}/'
}

export type PraisePlaylistUpdateResponses = {
  200: PlaylistSerializersReadable
}

export type PraisePlaylistUpdateResponse =
  PraisePlaylistUpdateResponses[keyof PraisePlaylistUpdateResponses]

export type PraisePraiseLineupListData = {
  body?: never
  path?: never
  query?: {
    /**
     * Which field to use when ordering the results.
     */
    ordering?: string
    /**
     * A search term.
     */
    search?: string
    /**
     * A page number within the paginated result set.
     */
    page?: number
  }
  url: '/praise/praise-lineup/'
}

export type PraisePraiseLineupListResponses = {
  200: {
    count: number
    next?: string | null
    previous?: string | null
    results: Array<PraiseLineupSerializersReadable>
  }
}

export type PraisePraiseLineupListResponse =
  PraisePraiseLineupListResponses[keyof PraisePraiseLineupListResponses]

export type PraisePraiseLineupCreateData = {
  body: PraiseLineupSerializers
  path?: never
  query?: never
  url: '/praise/praise-lineup/'
}

export type PraisePraiseLineupCreateResponses = {
  201: PraiseLineupSerializersReadable
}

export type PraisePraiseLineupCreateResponse =
  PraisePraiseLineupCreateResponses[keyof PraisePraiseLineupCreateResponses]

export type PraisePraiseLineupDeleteData = {
  body?: never
  path: {
    id: string
  }
  query?: never
  url: '/praise/praise-lineup/{id}/'
}

export type PraisePraiseLineupDeleteResponses = {
  204: void
}

export type PraisePraiseLineupDeleteResponse =
  PraisePraiseLineupDeleteResponses[keyof PraisePraiseLineupDeleteResponses]

export type PraisePraiseLineupReadData = {
  body?: never
  path: {
    id: string
  }
  query?: never
  url: '/praise/praise-lineup/{id}/'
}

export type PraisePraiseLineupReadResponses = {
  200: PraiseLineupSerializersReadable
}

export type PraisePraiseLineupReadResponse =
  PraisePraiseLineupReadResponses[keyof PraisePraiseLineupReadResponses]

export type PraisePraiseLineupPartialUpdateData = {
  body: PraiseLineupSerializers
  path: {
    id: string
  }
  query?: never
  url: '/praise/praise-lineup/{id}/'
}

export type PraisePraiseLineupPartialUpdateResponses = {
  200: PraiseLineupSerializersReadable
}

export type PraisePraiseLineupPartialUpdateResponse =
  PraisePraiseLineupPartialUpdateResponses[keyof PraisePraiseLineupPartialUpdateResponses]

export type PraisePraiseLineupUpdateData = {
  body: PraiseLineupSerializers
  path: {
    id: string
  }
  query?: never
  url: '/praise/praise-lineup/{id}/'
}

export type PraisePraiseLineupUpdateResponses = {
  200: PraiseLineupSerializersReadable
}

export type PraisePraiseLineupUpdateResponse =
  PraisePraiseLineupUpdateResponses[keyof PraisePraiseLineupUpdateResponses]

export type PraiseRegisterUserCreateData = {
  body: RegisterUser
  path?: never
  query?: never
  url: '/praise/register-user/'
}

export type PraiseRegisterUserCreateErrors = {
  /**
   * detail
   */
  400: unknown
}

export type PraiseRegisterUserCreateResponses = {
  /**
   * user_id
   */
  201: unknown
}

export type PraiseRequestPasswordResetCreateData = {
  body: RequestPasswordReset
  path?: never
  query?: never
  url: '/praise/request-password-reset/'
}

export type PraiseRequestPasswordResetCreateErrors = {
  /**
   * detail
   */
  400: unknown
}

export type PraiseRequestPasswordResetCreateResponses = {
  /**
   * token
   */
  201: unknown
}

export type PraiseScaleHistoryListData = {
  body?: never
  path?: never
  query?: never
  url: '/praise/scale-history/'
}

export type PraiseScaleHistoryListResponses = {
  /**
   * Lista de escalas
   */
  200: {
    scales?: Array<{
      id?: number
      lineup_date?: Date
      lineup_event?: string
      function_name?: string
    }>
  }
}

export type PraiseScaleHistoryListResponse =
  PraiseScaleHistoryListResponses[keyof PraiseScaleHistoryListResponses]

export type PraiseTokenTemporaryCreateData = {
  body: GenerateTemporaryToken
  path?: never
  query?: never
  url: '/praise/token-temporary/'
}

export type PraiseTokenTemporaryCreateResponses = {
  /**
   * Sem conteúdo
   */
  201: unknown
}

export type PraiseUserListData = {
  body?: never
  path?: never
  query?: {
    /**
     * username
     */
    username?: string
    /**
     * Which field to use when ordering the results.
     */
    ordering?: string
    /**
     * A search term.
     */
    search?: string
    /**
     * A page number within the paginated result set.
     */
    page?: number
  }
  url: '/praise/user/'
}

export type PraiseUserListResponses = {
  200: {
    count: number
    next?: string | null
    previous?: string | null
    results: Array<UserSerializersReadable>
  }
}

export type PraiseUserListResponse =
  PraiseUserListResponses[keyof PraiseUserListResponses]

export type PraiseUserCreateData = {
  body: UserSerializers
  path?: never
  query?: never
  url: '/praise/user/'
}

export type PraiseUserCreateResponses = {
  201: UserSerializersReadable
}

export type PraiseUserCreateResponse =
  PraiseUserCreateResponses[keyof PraiseUserCreateResponses]

export type PraiseUserDeleteData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this usuário.
     */
    id: number
  }
  query?: never
  url: '/praise/user/{id}/'
}

export type PraiseUserDeleteResponses = {
  204: void
}

export type PraiseUserDeleteResponse =
  PraiseUserDeleteResponses[keyof PraiseUserDeleteResponses]

export type PraiseUserReadData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this usuário.
     */
    id: number
  }
  query?: never
  url: '/praise/user/{id}/'
}

export type PraiseUserReadResponses = {
  200: UserSerializersReadable
}

export type PraiseUserReadResponse =
  PraiseUserReadResponses[keyof PraiseUserReadResponses]

export type PraiseUserPartialUpdateData = {
  body: UserSerializers
  path: {
    /**
     * A unique integer value identifying this usuário.
     */
    id: number
  }
  query?: never
  url: '/praise/user/{id}/'
}

export type PraiseUserPartialUpdateResponses = {
  200: UserSerializersReadable
}

export type PraiseUserPartialUpdateResponse =
  PraiseUserPartialUpdateResponses[keyof PraiseUserPartialUpdateResponses]

export type PraiseUserUpdateData = {
  body: UserSerializers
  path: {
    /**
     * A unique integer value identifying this usuário.
     */
    id: number
  }
  query?: never
  url: '/praise/user/{id}/'
}

export type PraiseUserUpdateResponses = {
  200: UserSerializersReadable
}

export type PraiseUserUpdateResponse =
  PraiseUserUpdateResponses[keyof PraiseUserUpdateResponses]

export type TokenCreateData = {
  body: TokenObtainPair
  path?: never
  query?: never
  url: '/token/'
}

export type TokenCreateResponses = {
  201: TokenObtainPair
}

export type TokenCreateResponse =
  TokenCreateResponses[keyof TokenCreateResponses]

export type TokenRefreshCreateData = {
  body: TokenRefreshWritable
  path?: never
  query?: never
  url: '/token/refresh/'
}

export type TokenRefreshCreateResponses = {
  201: TokenRefreshReadable
}

export type TokenRefreshCreateResponse =
  TokenRefreshCreateResponses[keyof TokenRefreshCreateResponses]

export type ClientOptions = {
  baseUrl: 'http://127.0.0.1:8000/api' | (string & {})
}
